---

- fail: "control_plane_lb_ip = {{ control_plane_lb_ip }} / apps_lb_ip = {{ apps_lb_ip }}"

- name: Check A records for servers
  command: "dig {{ item }} +short"
  loop: "{{ groups['all'] }}"
  register: check_a_records_servers

- name: Check PTR records for servers
  command: "dig -x {{ hostvars[item]['ansible_host'] }} +short"
  loop: "{{ groups['all'] }}"
  register: check_ptr_records_servers
  when: "'etcd' not in hostvars[item]['group_names']"    

- name: Check A records for API
  command: "dig {{ item }} +short"
  loop: 
    - "{{ api_url }}"
    - "{{ api_int_url }}"
  register: check_api_records_servers

- name: Check A records for APPS
  command: "dig {{ item }} +short"
  loop: 
    - "{{ apps_wildcard }}"
  register: check_apps_records_servers  

- name: Check SRV records
  command: "dig {{ item }} +short"
  loop: 
    - "_etcd-server-ssl._tcp.{{cluster_name}}.{{base_name}} SRV +short"
  register: check_srv_record

- name: delete output file if exists
  file:
    dest: ./dns-checks-output.txt
    state: absent
  delegate_to: localhost    

- name: create output file
  file:
    dest: ./dns-checks-output.txt
    state: touch
  delegate_to: localhost

- name: printing outputs results of A records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "*** Check A records *****\n"
    insertafter: EOF
  delegate_to: localhost

- name: printing outputs results of A records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "A record for {{item.item}}/{{ hostvars[item.item]['ansible_host'] }} = {{item.stdout}} --> RESULT: {% if item.stdout == hostvars[item.item]['ansible_host'] %} SUCCESS! {% else %} FAILED! {% endif %}"
    insertafter: EOF
  delegate_to: localhost
  loop: "{{ check_a_records_servers.results }}"  
#  when: "'etcd' not in hostvars[item.item]['group_names']"  

- name: printing outputs results of PTR records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "\n*** Check PTR records *****\n"
    insertafter: EOF
  delegate_to: localhost

- name: printing outputs results of PTR records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "PTR record for {{item.item}}/{{ hostvars[item.item]['ansible_host'] }} = {{item.stdout}} --> RESULT: {% if item.item in item.stdout %} SUCCESS! {% else %} FAILED! {% endif %}"
    insertafter: EOF
  delegate_to: localhost
  loop: "{{ check_ptr_records_servers.results }}"  
  when: "'etcd' not in hostvars[item.item]['group_names']"  

- name: printing outputs results of API records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "\n*** Check API records *****\n"
    insertafter: EOF
  delegate_to: localhost

- name: printing outputs results of API records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "API record for {{item.item}} = {{item.stdout}} --> RESULT: {% if item.stdout == control_plane_lb_ip %} SUCCESS! {% else %} FAILED! {% endif %}"
    insertafter: EOF
  delegate_to: localhost
  loop: "{{ check_api_records_servers.results }}"   

- name: printing outputs results of APPS Wildcard records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "APPS wildcard record for {{item.item}} = {{item.stdout}} --> RESULT: {% if item.stdout == apps_lb_ip %} SUCCESS! {% else %} FAILED! {% endif %}"
    insertafter: EOF
  delegate_to: localhost
  loop: "{{ check_apps_records_servers.results }}"   

- name: Define SRV records template
  template:
    src: etcd-srv-records.j2
    dest: ./etcd-srv-records-tmpl.txt

- name: printing outputs results of SRV records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "\n*** Check SRV record *****\n"
    insertafter: EOF
  delegate_to: localhost

- name: printing outputs results of SRV records checks
  lineinfile:
    dest: ./dns-checks-output.txt
    line: "SRV record for {{item.item}} --> RESULT: {% if item.stdout | sort() == lookup('file', './etcd-srv-records-tmpl.txt') | sort() %} SUCCESS! {% else %} FAILED! {% endif %}"
    insertafter: EOF
  delegate_to: localhost
  loop: "{{ check_srv_record.results }}"  

- name: delete temp file
  file:
    dest: ./etcd-srv-records-tmpl.txt
    state: absent
  delegate_to: localhost  
